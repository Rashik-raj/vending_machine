# Generated by Django 3.2.4 on 2021-08-28 15:03

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
            options={
                'verbose_name_plural': 'accounts',
                'db_table': 'account',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=30)),
                ('currency', models.CharField(choices=[('RS', 'RS'), ('INR', 'INR'), ('USD', 'USD')], max_length=3)),
                ('price', models.DecimalField(decimal_places=2, max_digits=5)),
                ('stock', models.PositiveBigIntegerField()),
                ('image', models.ImageField(null=True, upload_to='product_img/')),
            ],
            options={
                'verbose_name_plural': 'products',
                'db_table': 'product',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=30)),
                ('phone', models.CharField(max_length=15, unique=True, validators=[django.core.validators.RegexValidator(regex='^(\\+?[\\d]{2,3}\\-?)?[\\d]{8,10}$')])),
                ('address', models.CharField(max_length=30)),
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='vendor.account')),
            ],
            options={
                'verbose_name_plural': 'vendors',
                'db_table': 'vendor',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=30)),
                ('quantity', models.IntegerField()),
                ('invoice_number', models.CharField(blank=True, max_length=8)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=5)),
                ('total_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=5)),
                ('change', models.DecimalField(blank=True, decimal_places=2, max_digits=5)),
                ('type', models.CharField(choices=[('Purchase', 'Purchase'), ('Refund', 'Refund')], max_length=8)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vendor.product')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vendor.vendor')),
            ],
            options={
                'verbose_name_plural': 'transactions',
                'db_table': 'transaction',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='product',
            name='vendor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vendor.vendor'),
        ),
    ]
